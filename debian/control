Source: ubuntu-secure-boot
Section: utils
Priority: extra
Maintainer: James Johnston <johnstonj.public@codenest.com>
Build-Depends: debhelper (>= 9)
Standards-Version: 3.9.6
Homepage: https://github.com/JohnstonJ/ubuntu-secure-boot
Vcs-Git: https://github.com/JohnstonJ/ubuntu-secure-boot.git
Vcs-Browser: https://github.com/JohnstonJ/ubuntu-secure-boot

Package: ubuntu-secure-boot
# Currently this is only tested and designed for 64-bit EFI:
Architecture: amd64
# Currently only tested on very recent versions of GRUB/gnupg:
Depends: ${misc:Depends}, grub-efi-amd64 (>= 2.02~beta2-29ubuntu0.3),
    gnupg (>= 1.4.18), efibootmgr (>= 0.12), openssl (>= 1.0.2),
    uuid-runtime (>= 2.26.2), efitools (>= 1.4.2), sbsigntool (>= 0.6),
    patch (>= 2.7.5), pinentry-tty (>= 1.1.1)
# shim should be removed; it is signed by Canonical/Microsoft
# and degrades boot security.
Conflicts: shim, shim-signed, 
Description: Proper secure boot for Ubuntu
 The stock Ubuntu 15.10 installation only implements secure boot just enough
 to get a Microsoft-signed shim in place.  It does nothing to actually secure
 the boot process.  This package can help users do so.
 .
 Assumptions: (1) 64-bit computer booting via EFI, (2) full disk encryption
 is used.  While this package will install without full disk encryption, it
 does nothing to secure the booted operating system beyond signing the kernel
 and initramfs.  Private keys are stored within the /etc directory, so this
 must be secured as well.  Note that the /boot partition may remain
 unencrypted, as one purpose of this package is to secure it.
 .
 After installing, you will need to run make-secure-boot-keys.  Then, you will
 need to enable secure boot in your system firmware and import the generated
 keys into the configuration.
